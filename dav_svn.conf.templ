#  ... 
# URL controls how the repository appears to the outside world.
# In this example clients access the repository as http://hostname/{SVN_WEB_DIR}/
# Note, a literal /{SVN_WEB_DIR} should NOT exist in your document root.
<Location /{SVN_WEB_DIR}>
  # Uncomment this to enable the repository
  DAV svn

  # Set this to the path to your repository
  # SVNPath /var/lib/svn
  # Alternatively, use SVNParentPath if you have multiple repositories under
  # under a single directory ({SVN_DIR}/repo1, {SVN_DIR}/repo2, ...).
  # You need either SVNPath and SVNParentPath, but not both.
  SVNParentPath {SVN_DIR}

  # Access control is done at 3 levels: (1) Apache authentication, via
  # any of several methods.  A "Basic Auth" section is commented out
  # below.  (2) Apache  and , also commented out
  # below.  (3) mod_authz_svn is a svn-specific authorization module
  # which offers fine-grained read/write access control for paths
  # within a repository.  (The first two layers are coarse-grained; you
  # can only enable/disable access to an entire repository.)  Note that
  # mod_authz_svn is noticeably slower than the other two layers, so if
  # you don't need the fine-grained control, don't configure it.

  # Basic Authentication is repository-wide.  It is not secure unless
  # you are using https.  See the 'htpasswd' command to create and
  # manage the password file - and the documentation for the
  # 'auth_basic' and 'authn_file' modules, which you will need for this
  # (enable them with 'a2enmod').
  AuthType Basic
  AuthName "SVN Login"
  AuthUserFile /etc/apache2/dav_svn.passwd

  # To enable authorization via mod_authz_svn (enable that module separately):
  #
  # AuthzSVNAccessFile /etc/apache2/dav_svn.authz
  #

  # The following three lines allow anonymous read, but make
  # committers authenticate themselves.  It requires the 'authz_user'
  # module (enable it with 'a2enmod').
  #
    Require valid-user
  # 
</Location>
